rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Funzioni Helper per i Ruoli ---
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isManagerOrAdmin() {
      let userRole = getUserRole(request.auth.uid);
      return userRole == 'manager' || userRole == 'admin';
    }
    
    function isCollaborator() {
      let userRole = getUserRole(request.auth.uid);
      return userRole == 'collaborator';
    }
    
    function getAssignedChannels(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.assignedChannels;
    }
    
    function canAccessSupplier(supplierId) {
      return isManagerOrAdmin() || 
             (isCollaborator() && supplierId in getAssignedChannels(request.auth.uid));
    }
    
    // --- Regole per le Collezioni ---
    
    match /users/{userId} {
  allow read: if request.auth.uid == userId || isManagerOrAdmin();
  allow update: if request.auth.uid == userId || isManagerOrAdmin();  // <-- CORRETTO
  allow create, delete: if isManagerOrAdmin();
}
    
    match /expenses/{expenseId} {
      // Lettura: collaboratori solo per i fornitori assegnati
      allow read: if request.auth != null && (
        isManagerOrAdmin() || 
        (isCollaborator() && canAccessSupplier(resource.data.supplierId))
      );
      
      // Creazione: tutti gli utenti autenticati
      allow create: if request.auth != null && (
        isManagerOrAdmin() || 
        (isCollaborator() && canAccessSupplier(request.resource.data.supplierId))
      );
      
      // Modifica/Cancellazione: manager/admin o l'autore della spesa
      allow update, delete: if isManagerOrAdmin() || request.auth.uid == resource.data.authorId;
    }
    
    match /contracts/{contractId} {
      // Lettura: collaboratori solo per i fornitori assegnati
      allow read: if request.auth != null && (
        isManagerOrAdmin() || 
        (isCollaborator() && canAccessSupplier(resource.data.supplierld))
      );
      
      // Scrittura: solo manager e admin
      allow write: if isManagerOrAdmin();
    }
    
    match /budgets/{docId} {
      allow read, write: if isManagerOrAdmin();
    }
    
    match /budget_summaries/{summaryId} {
      allow read: if isManagerOrAdmin();
      allow write: if false;
    }
    
    match /sector_budgets/{budgetId} {
      allow read: if isManagerOrAdmin();
      allow write: if isManagerOrAdmin();
    }
    
    // --- Regole per le Collezioni di Configurazione ---
    // Collaboratori possono leggere per usare dropdown, ma non scrivere
    
    match /sectors/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
    
    match /branches/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
    
    match /channels/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
    
    match /marketing_channels/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
    
    match /channel_categories/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
    
    match /geographic_areas/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagerOrAdmin();
    }
  }
}